<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch	http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">

	<!-- Import Dao -->
	<import resource="classpath*:spring/applicationContext-flexoffice-dao.xml" />
	
	<!-- JobRepository and JobLauncher are configuration/setup classes -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	<!-- ItemReader which reads from database and returns the row mapped by 
		rowMapper -->
	<bean id="databaseItemReader"
		class="org.springframework.batch.item.database.JdbcCursorItemReader">

		<property name="dataSource" ref="dataSource" />

		<property name="sql"
			value="select rooms.name as room_name, rooms.type as room_type, room_stats.begin_occupancy_date, room_stats.end_occupancy_date from rooms, room_stats where rooms.id=room_stats.room_id order by room_stats.begin_occupancy_date" />

		<property name="rowMapper">
			<bean class="com.orange.flexoffice.business.adminui.stat.ExportStatRowMapper" />
		</property>

	</bean>


	<!-- ItemWriter writes a line into output flat file -->
	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter"
		scope="step">

		<property name="resource" value="file:${export.file.location}" />
		<property name="shouldDeleteIfExists" value="true"/>
		<property name="lineAggregator">
			<!-- An Aggregator which converts an object into delimited list of strings -->
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<!-- Extractor which returns the value of beans property through reflection -->
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="roomName, roomType, beginOccupancyDate, endOccupancyDate" />
					</bean>
				</property>
			</bean>
		</property>
		 <property name="headerCallback" ref="exportStatFlatFileWriter" />
	</bean>

	<bean id="exportStatFlatFileWriter"
		class="com.orange.flexoffice.business.adminui.stat.ExportStatFlatFileWriter" >
	</bean>	


	<!-- Optional JobExecutionListener to perform business logic before and after the job -->
	<bean id="jobListener" class="com.orange.flexoffice.business.adminui.stat.ExportStatJobListener" />

	<!-- Optional ItemProcessor to perform business logic/filtering on the input records -->
	<bean id="itemProcessor" class="com.orange.flexoffice.business.adminui.stat.ExportStatItemProcessor" />

	<!-- Actual Job -->
	<batch:job id="exportStatJob">
		<batch:step id="step1">
			<batch:tasklet transaction-manager="transactionManager">
				<batch:chunk reader="databaseItemReader" writer="flatFileItemWriter"
					processor="itemProcessor" commit-interval="100" />
			</batch:tasklet>
		</batch:step>
		<batch:listeners>
			<batch:listener ref="jobListener" />
		</batch:listeners>
	</batch:job>

</beans>			